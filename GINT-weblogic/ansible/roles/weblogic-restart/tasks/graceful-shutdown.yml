- name: Create directory to place scripts
  file:
    state: directory
    path: /opt/oracle/scripts

- name: Copy weblogicGracefulShutdown.py and managedhost extraction script
  copy:
    src: "{{ item }}"
    dest: "/opt/oracle/scripts/"
  with_items:
  - "prepareManagedHost.sh"
  - "../../../../wlst/miscelleneous/weblogicGracefulShutdown.py"
  - "../../../../wlst/commons.py"

- name: Copy credentials
  copy:
    src: "../../../../wlst/credentials.properties"
    dest: "/opt/oracle/scripts/.credentials.properties"
  no_log: true

- name: Extract adminshot from config.xml
  shell: |
          awk '/AdminChannel/ {p=1}; p; /<\/network-access-point>/ {p=0}' /opt/oracle/domains{{ fmw_version }}/{{ item }}/config/config.xml | grep 'listen-address' | sed 's/listen-address//g' | sed 's/<//g' | sed 's/>//g' | sed 's/\///g' | sed 's/ //g'
  register: adminhost
  with_items:
  - "{{ domains.split(',') }}"
  when: env in ['PPE','PROD']

- name: Prepare managedhost from adminhost for PPE and PROD
  #shell: "id=${{{ item }}: -1} && echo ${{{ adminhost.stdout }}//a01/m0${id}}"
  shell: "sh /opt/oracle/scripts/prepareManagedHost.sh {{ server_name }} {{ adminhost.results[0].stdout }}"
  when: (env in ['PPE','PROD']) and (server_name is not search('Admin'))
  register: managedhost
  with_items:
  - "{{ servers.split(',') }}"
  loop_control:
    loop_var: server_name

- name: set mhost fact for managed hosts 
  set_fact:
    mhost: "{{ result.stdout }}"
  with_items:
  - "{{ managedhost.results }}"
  loop_control:
    loop_var: result
  when: result.stdout is defined

- debug:
    msg: "{{ mhost }}"
  when: env in ['PPE','PROD']

#- debug:
#    msg: "{{ mhost }}"
#  register: mvip
#  when: env in ['PPE','PROD']
#  with_items:
#  - "{{ managedhost.results }}"
#  loop_control:
#    loop_var: mhost

#- debug: 
#    msg: "{{ mvip.mhost.stdout }}"
#  when: env in ['PPE','PROD']

- name: Shutdown the server gracefully
  shell: "cd /opt/oracle/scripts && /opt/oracle/FMW{{ fmw_version }}/oracle_common/common/bin/wlst.sh weblogicGracefulShutdown.py {{ mhost }} 8001"
  register: scriptop
  with_items:
  - "{{ servers.split(',') }}"
  loop_control:
    loop_var: server_name
  #when: (((server_name is search('soa')) or (server_name is search('osb')) or (server_name is search('gtw'))) and (env in ['PPE','PROD']))
  when: 
  - '"soa" in server_name or "osb" in server_name or "gtw" in server_name'
  - 'env in ["PPE","PROD"]'
  failed_when: '"Script execution failed" in scriptop.stdout or "Problem invoking WLST" in scriptop.stderr'

- name: Shutdown the server gracefully
  shell: "cd /opt/oracle/scripts && /opt/oracle/FMW{{ fmw_version }}/oracle_common/common/bin/wlst.sh weblogicGracefulShutdown.py {{ inventory_hostname }} 8001"
  register: scriptop
  with_items:
  - "{{ servers.split(',') }}"
  loop_control:
    loop_var: server_name
  when: (((server_name is search('soa')) or (server_name is search('osb')) or (server_name is search('gtw'))) and (env not in ['PPE','PROD']))
  failed_when: '"Script execution failed" in scriptop.stdout or "Problem invoking WLST" in scriptop.stderr'

- name: Remove credentials file
  file:
    path: "/opt/oracle/scripts/.credentials.properties"
    state: absent

