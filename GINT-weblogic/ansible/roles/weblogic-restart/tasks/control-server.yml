#This task will gracefully shutdown the server
#- include: graceful-shutdown.yml server_name="{{ server }}"
#  when: (fmw_version is version_compare('12.2','==')) and (control_status == "stop") and (server is not search('Admin'))
#  with_items:
#  - "{{ servers.split(',') }}"
#  loop_control:
#    loop_var: server

- include: graceful-shutdown.yml
  when: (fmw_version is version_compare('12.2','==')) and (control_status == "stop") and (stack != "odi")

#This task will forcefully shutdown the server
- name: "{{ control_status }} server on {{ inventory_hostname }} forcefully"
  #shell: "cd /opt/oracle/domains{{ fmw_ver }}/{{ dom_name }} && nohup ./{{ control_status }}_{{ server_name }}_WithNodeManager.sh > /dev/null 2>&1 &"
  shell: "cd /opt/oracle/domains{{ fmw_ver }}/{{ item[0] }} && ./{{ control_status }}_{{ item[1] }}_WithNodeManager.sh"
  when: (fmw_version is version_compare('12.2','!=')) or (item[1] is search('Admin') or item[1] is search('ODI')) or control_status == "start"
  with_nested:
  - "{{ domains.split(',') }}"
  - "{{ servers.split(',') }}"
  register: controlop

#This task will gracefully shutdown the server
#- include: graceful-shutdown.yml server_name="{{ server }}"
#  when: (fmw_version is version_compare('12.2','==')) and (control_status == "stop") and (server is not search('Admin'))
#  with_items:
#  - "{{ servers.split(',') }}"
#  loop_control:
#    loop_var: server

- block:  
  #- name: Validate server startup output
  #  fail:
  #    msg: "Unable to start the server"
  #  when: '"Successfully started" not in controlop.stdout'

  - name: "Validate server status from log file on {{ inventory_hostname }}"
    wait_for: 
      search_regex: "Server state changed to RUNNING"
      path: "/u01/app/oracle/admin/logs/{{ item[0] }}/{{ item[1] }}/{{ item[1] }}.log"
      delay: 10
      timeout: 300
      msg: "{{ item[1] }} failed to start in 10 mins"
    with_nested:
    - "{{ domains.split(',') }}"
    - "{{ servers.split(',') }}"
  
  - name: "Validate if soa platform has loaded for {{ item[1] }} on {{ inventory_hostname }}"
    wait_for: 
      search_regex: "SOA Platform is running and accepting requests"
      path: "/u01/app/oracle/admin/logs/{{ item[0] }}/{{ item[1] }}/{{ item[1] }}.log"
      delay: 10
      timeout: 300
      msg: "soa platform failed to load on {{ item[1] }} within 5 mins after start-up"  
    when: "'soa_server' in item[1]"
    with_nested:
    - "{{ domains.split(',') }}"
    - "{{ servers.split(',') }}"
  when: control_status == "start"
 
- name: Move tmp and cache folders to backup folder
  shell: "cd /opt/oracle/domains{{ fmw_ver }}/{{ item[1] }}/servers/{{ item[2] }} && mv {{ item[0] }} {{ item[0] }}_{{ dt.stdout }}"
  with_nested:
  - ["tmp","cache"]
  - "{{ domains.split(',') }}"
  - "{{ servers.split(',') }}"
  when: control_status == "stop"
  ignore_errors: yes
