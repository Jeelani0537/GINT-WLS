- hosts: all
  gather_facts: no
  become: yes
  any_errors_fatal: true
  become_user: oracle

  vars_files:
  - ../group_vars/global.yml

  roles:
  - role: ../roles/generate-password
    run_once: true

  - role: ../roles/baseline
    patch_file: reset-weblogic-password
    additional_params: "{{ passwd.stdout }}"
    when: servers is search('Admin')

  - role: update-password

#- hosts: all
#  gather_facts: no
#  #any_errors_fatal: true
#  serial: 1
#  become: true
#  become_user: oracle
  
#  vars_files:
#  - ../group_vars/global.yml
  
#  roles:
#  - role: ../roles/blackout
#    action: start
#    tags: blackoutstart

#  - role: ../roles/weblogic-restart
#    action: stop
#    tags: weblogicstop
#    ignore_errors: yes

#  - role: ../roles/weblogic-restart
#    action: start
#    tags: weblogicstart

#  - role: ../roles/blackout
#    action: stop
#    tags: blackoutstop

#- hosts: all
#  gather_facts: no
#  become: yes
#  become_user: oracle

#  vars_files:
#  - ../group_vars/global.yml

#  roles:
#  - role: ../roles/health-check
#    when: servers is search('Admin')
#
#- hosts: all
#  become: yes
#  become_user: oracle
#  gather_facts: no

#  tasks:
#  - name: Remove server's boot.properties
#    file: 
#      path: "/opt/oracle/domains{{ fmw_version }}/{{ item[0] }}/servers/{{ item[1] }}/security/boot.properties"
#      state: absent
#    with_nested:
#    - "{{ domains.split(',') }}"
#    - "{{ servers.split(',') }}"

#  - name: Copy encrypted boot.properties
#    copy:
#      src: "/opt/oracle/domains{{ fmw_version }}/{{ item[0] }}/servers/{{ item[1] }}/data/nodemanager/boot.properties"
#      dest: "/opt/oracle/domains{{ fmw_version }}/{{ item[0] }}/servers/{{ item[1] }}/security/"
#      remote_src: true
#    with_nested:
#    - "{{ domains.split(',') }}"
#    - "{{ servers.split(',') }}"
#    ignore_errors: yes
